# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=release
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),release)
  sentry_config = release
  sentry_crashpad_config = release
  sentry_breakpad_config = release
  example_config = release
  example_crashpad_config = release
  example_breakpad_config = release
  test_sentry_config = release
  crashpad_minichromium_base_config = release
  crashpad_client_config = release
  crashpad_util_config = release
  crashpad_snapshot_config = release
  crashpad_minidump_config = release
  crashpad_handler_config = release
  crashpad_zlib_config = release
  crashpad_crash_config = release
  breakpad_client_config = release
  breakpad_crash_config = release

else ifeq ($(config),debug)
  sentry_config = debug
  sentry_crashpad_config = debug
  sentry_breakpad_config = debug
  example_config = debug
  example_crashpad_config = debug
  example_breakpad_config = debug
  test_sentry_config = debug
  crashpad_minichromium_base_config = debug
  crashpad_client_config = debug
  crashpad_util_config = debug
  crashpad_snapshot_config = debug
  crashpad_minidump_config = debug
  crashpad_handler_config = debug
  crashpad_zlib_config = debug
  crashpad_crash_config = debug
  breakpad_client_config = debug
  breakpad_crash_config = debug

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := sentry sentry_crashpad sentry_breakpad example example_crashpad example_breakpad test_sentry crashpad_minichromium_base crashpad_client crashpad_util crashpad_snapshot crashpad_minidump crashpad_handler crashpad_zlib crashpad_crash breakpad_client breakpad_crash

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

sentry:
ifneq (,$(sentry_config))
	@echo "==== Building sentry ($(sentry_config)) ===="
	@${MAKE} --no-print-directory -C . -f sentry.make config=$(sentry_config)
endif

sentry_crashpad: crashpad_client crashpad_util crashpad_minichromium_base crashpad_handler
ifneq (,$(sentry_crashpad_config))
	@echo "==== Building sentry_crashpad ($(sentry_crashpad_config)) ===="
	@${MAKE} --no-print-directory -C . -f sentry_crashpad.make config=$(sentry_crashpad_config)
endif

sentry_breakpad: breakpad_client
ifneq (,$(sentry_breakpad_config))
	@echo "==== Building sentry_breakpad ($(sentry_breakpad_config)) ===="
	@${MAKE} --no-print-directory -C . -f sentry_breakpad.make config=$(sentry_breakpad_config)
endif

example: sentry
ifneq (,$(example_config))
	@echo "==== Building example ($(example_config)) ===="
	@${MAKE} --no-print-directory -C . -f example.make config=$(example_config)
endif

example_crashpad: sentry_crashpad crashpad_handler
ifneq (,$(example_crashpad_config))
	@echo "==== Building example_crashpad ($(example_crashpad_config)) ===="
	@${MAKE} --no-print-directory -C . -f example_crashpad.make config=$(example_crashpad_config)
endif

example_breakpad: sentry_breakpad
ifneq (,$(example_breakpad_config))
	@echo "==== Building example_breakpad ($(example_breakpad_config)) ===="
	@${MAKE} --no-print-directory -C . -f example_breakpad.make config=$(example_breakpad_config)
endif

test_sentry:
ifneq (,$(test_sentry_config))
	@echo "==== Building test_sentry ($(test_sentry_config)) ===="
	@${MAKE} --no-print-directory -C . -f test_sentry.make config=$(test_sentry_config)
endif

crashpad_minichromium_base:
ifneq (,$(crashpad_minichromium_base_config))
	@echo "==== Building crashpad_minichromium_base ($(crashpad_minichromium_base_config)) ===="
	@${MAKE} --no-print-directory -C . -f crashpad_minichromium_base.make config=$(crashpad_minichromium_base_config)
endif

crashpad_client:
ifneq (,$(crashpad_client_config))
	@echo "==== Building crashpad_client ($(crashpad_client_config)) ===="
	@${MAKE} --no-print-directory -C . -f crashpad_client.make config=$(crashpad_client_config)
endif

crashpad_util:
ifneq (,$(crashpad_util_config))
	@echo "==== Building crashpad_util ($(crashpad_util_config)) ===="
	@${MAKE} --no-print-directory -C . -f crashpad_util.make config=$(crashpad_util_config)
endif

crashpad_snapshot:
ifneq (,$(crashpad_snapshot_config))
	@echo "==== Building crashpad_snapshot ($(crashpad_snapshot_config)) ===="
	@${MAKE} --no-print-directory -C . -f crashpad_snapshot.make config=$(crashpad_snapshot_config)
endif

crashpad_minidump:
ifneq (,$(crashpad_minidump_config))
	@echo "==== Building crashpad_minidump ($(crashpad_minidump_config)) ===="
	@${MAKE} --no-print-directory -C . -f crashpad_minidump.make config=$(crashpad_minidump_config)
endif

crashpad_handler: crashpad_minichromium_base crashpad_client crashpad_util crashpad_snapshot crashpad_minidump
ifneq (,$(crashpad_handler_config))
	@echo "==== Building crashpad_handler ($(crashpad_handler_config)) ===="
	@${MAKE} --no-print-directory -C . -f crashpad_handler.make config=$(crashpad_handler_config)
endif

crashpad_zlib:
ifneq (,$(crashpad_zlib_config))
	@echo "==== Building crashpad_zlib ($(crashpad_zlib_config)) ===="
	@${MAKE} --no-print-directory -C . -f crashpad_zlib.make config=$(crashpad_zlib_config)
endif

crashpad_crash: crashpad_minichromium_base crashpad_util crashpad_client crashpad_handler
ifneq (,$(crashpad_crash_config))
	@echo "==== Building crashpad_crash ($(crashpad_crash_config)) ===="
	@${MAKE} --no-print-directory -C . -f crashpad_crash.make config=$(crashpad_crash_config)
endif

breakpad_client:
ifneq (,$(breakpad_client_config))
	@echo "==== Building breakpad_client ($(breakpad_client_config)) ===="
	@${MAKE} --no-print-directory -C . -f breakpad_client.make config=$(breakpad_client_config)
endif

breakpad_crash: breakpad_client
ifneq (,$(breakpad_crash_config))
	@echo "==== Building breakpad_crash ($(breakpad_crash_config)) ===="
	@${MAKE} --no-print-directory -C . -f breakpad_crash.make config=$(breakpad_crash_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f sentry.make clean
	@${MAKE} --no-print-directory -C . -f sentry_crashpad.make clean
	@${MAKE} --no-print-directory -C . -f sentry_breakpad.make clean
	@${MAKE} --no-print-directory -C . -f example.make clean
	@${MAKE} --no-print-directory -C . -f example_crashpad.make clean
	@${MAKE} --no-print-directory -C . -f example_breakpad.make clean
	@${MAKE} --no-print-directory -C . -f test_sentry.make clean
	@${MAKE} --no-print-directory -C . -f crashpad_minichromium_base.make clean
	@${MAKE} --no-print-directory -C . -f crashpad_client.make clean
	@${MAKE} --no-print-directory -C . -f crashpad_util.make clean
	@${MAKE} --no-print-directory -C . -f crashpad_snapshot.make clean
	@${MAKE} --no-print-directory -C . -f crashpad_minidump.make clean
	@${MAKE} --no-print-directory -C . -f crashpad_handler.make clean
	@${MAKE} --no-print-directory -C . -f crashpad_zlib.make clean
	@${MAKE} --no-print-directory -C . -f crashpad_crash.make clean
	@${MAKE} --no-print-directory -C . -f breakpad_client.make clean
	@${MAKE} --no-print-directory -C . -f breakpad_crash.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  release"
	@echo "  debug"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   sentry"
	@echo "   sentry_crashpad"
	@echo "   sentry_breakpad"
	@echo "   example"
	@echo "   example_crashpad"
	@echo "   example_breakpad"
	@echo "   test_sentry"
	@echo "   crashpad_minichromium_base"
	@echo "   crashpad_client"
	@echo "   crashpad_util"
	@echo "   crashpad_snapshot"
	@echo "   crashpad_minidump"
	@echo "   crashpad_handler"
	@echo "   crashpad_zlib"
	@echo "   crashpad_crash"
	@echo "   breakpad_client"
	@echo "   breakpad_crash"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"