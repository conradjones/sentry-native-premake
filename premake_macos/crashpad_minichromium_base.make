# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=release
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

ifeq ($(origin CC), default)
  CC = clang
endif
ifeq ($(origin CXX), default)
  CXX = clang++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
INCLUDES += -I../crashpad/build/crashpad -I../crashpad/build/crashpad/third_party/mini_chromium/mini_chromium -I../crashpad/build/crashpad/compat/mac -I../crashpad/build/crashpad/compat/non_win -I../crashpad/build/crashpad/compat/non_elf
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS +=
LDDEPS +=
ALL_LDFLAGS += $(LDFLAGS)
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),release)
TARGETDIR = bin/Release
TARGET = $(TARGETDIR)/libcrashpad_minichromium_base.a
OBJDIR = obj/Release/crashpad_minichromium_base
DEFINES += -DNDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -O2 -fPIC -g -mmacosx-version-min=10.9
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -O2 -fPIC -g -std=c++14 -mmacosx-version-min=10.9

else ifeq ($(config),debug)
TARGETDIR = bin/Debug
TARGET = $(TARGETDIR)/libcrashpad_minichromium_base.a
OBJDIR = obj/Debug/crashpad_minichromium_base
DEFINES +=
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -fPIC -g -mmacosx-version-min=10.9
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -fPIC -g -std=c++14 -mmacosx-version-min=10.9

else
  $(error "invalid configuration $(config)")
endif

# Per File Configurations
# #############################################


# File sets
# #############################################

OBJECTS :=

OBJECTS += $(OBJDIR)/alias.o
OBJECTS += $(OBJDIR)/close_nocancel.o
OBJECTS += $(OBJDIR)/file_path.o
OBJECTS += $(OBJDIR)/file_util_posix.o
OBJECTS += $(OBJDIR)/foundation_util.o
OBJECTS += $(OBJDIR)/icu_utf.o
OBJECTS += $(OBJDIR)/lock.o
OBJECTS += $(OBJDIR)/lock_impl_posix.o
OBJECTS += $(OBJDIR)/logging.o
OBJECTS += $(OBJDIR)/mach_logging.o
OBJECTS += $(OBJDIR)/memory.o
OBJECTS += $(OBJDIR)/process_metrics_posix.o
OBJECTS += $(OBJDIR)/rand_util.o
OBJECTS += $(OBJDIR)/safe_strerror.o
OBJECTS += $(OBJDIR)/scoped_file.o
OBJECTS += $(OBJDIR)/scoped_mach_port.o
OBJECTS += $(OBJDIR)/scoped_mach_vm.o
OBJECTS += $(OBJDIR)/scoped_nsautorelease_pool.o
OBJECTS += $(OBJDIR)/string16.o
OBJECTS += $(OBJDIR)/string_number_conversions.o
OBJECTS += $(OBJDIR)/stringprintf.o
OBJECTS += $(OBJDIR)/sys_string_conversions_mac.o
OBJECTS += $(OBJDIR)/thread_local_storage.o
OBJECTS += $(OBJDIR)/thread_local_storage_posix.o
OBJECTS += $(OBJDIR)/utf_string_conversion_utils.o
OBJECTS += $(OBJDIR)/utf_string_conversions.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking crashpad_minichromium_base
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning crashpad_minichromium_base
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/alias.o: ../crashpad/build/crashpad/third_party/mini_chromium/mini_chromium/base/debug/alias.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/file_path.o: ../crashpad/build/crashpad/third_party/mini_chromium/mini_chromium/base/files/file_path.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/file_util_posix.o: ../crashpad/build/crashpad/third_party/mini_chromium/mini_chromium/base/files/file_util_posix.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/scoped_file.o: ../crashpad/build/crashpad/third_party/mini_chromium/mini_chromium/base/files/scoped_file.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/logging.o: ../crashpad/build/crashpad/third_party/mini_chromium/mini_chromium/base/logging.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/close_nocancel.o: ../crashpad/build/crashpad/third_party/mini_chromium/mini_chromium/base/mac/close_nocancel.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/foundation_util.o: ../crashpad/build/crashpad/third_party/mini_chromium/mini_chromium/base/mac/foundation_util.mm
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/mach_logging.o: ../crashpad/build/crashpad/third_party/mini_chromium/mini_chromium/base/mac/mach_logging.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/scoped_mach_port.o: ../crashpad/build/crashpad/third_party/mini_chromium/mini_chromium/base/mac/scoped_mach_port.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/scoped_mach_vm.o: ../crashpad/build/crashpad/third_party/mini_chromium/mini_chromium/base/mac/scoped_mach_vm.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/scoped_nsautorelease_pool.o: ../crashpad/build/crashpad/third_party/mini_chromium/mini_chromium/base/mac/scoped_nsautorelease_pool.mm
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/safe_strerror.o: ../crashpad/build/crashpad/third_party/mini_chromium/mini_chromium/base/posix/safe_strerror.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/memory.o: ../crashpad/build/crashpad/third_party/mini_chromium/mini_chromium/base/process/memory.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/process_metrics_posix.o: ../crashpad/build/crashpad/third_party/mini_chromium/mini_chromium/base/process/process_metrics_posix.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/rand_util.o: ../crashpad/build/crashpad/third_party/mini_chromium/mini_chromium/base/rand_util.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/string16.o: ../crashpad/build/crashpad/third_party/mini_chromium/mini_chromium/base/strings/string16.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/string_number_conversions.o: ../crashpad/build/crashpad/third_party/mini_chromium/mini_chromium/base/strings/string_number_conversions.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/stringprintf.o: ../crashpad/build/crashpad/third_party/mini_chromium/mini_chromium/base/strings/stringprintf.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/sys_string_conversions_mac.o: ../crashpad/build/crashpad/third_party/mini_chromium/mini_chromium/base/strings/sys_string_conversions_mac.mm
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/utf_string_conversion_utils.o: ../crashpad/build/crashpad/third_party/mini_chromium/mini_chromium/base/strings/utf_string_conversion_utils.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/utf_string_conversions.o: ../crashpad/build/crashpad/third_party/mini_chromium/mini_chromium/base/strings/utf_string_conversions.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/lock.o: ../crashpad/build/crashpad/third_party/mini_chromium/mini_chromium/base/synchronization/lock.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/lock_impl_posix.o: ../crashpad/build/crashpad/third_party/mini_chromium/mini_chromium/base/synchronization/lock_impl_posix.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/icu_utf.o: ../crashpad/build/crashpad/third_party/mini_chromium/mini_chromium/base/third_party/icu/icu_utf.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/thread_local_storage.o: ../crashpad/build/crashpad/third_party/mini_chromium/mini_chromium/base/threading/thread_local_storage.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/thread_local_storage_posix.o: ../crashpad/build/crashpad/third_party/mini_chromium/mini_chromium/base/threading/thread_local_storage_posix.cc
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif